@page "/"
@using demoVer.Components.Layout
@inject IJSRuntime JS
@rendermode InteractiveServer

<PageTitle>NTN module</PageTitle>

<TopRow OnSendToParent="ReceiveFromChild"/>

<div class="column-container">
    <div class="row1-container">
        <div class="row1-leftPart">
            Inverter OFF/ON：
            <label class="switch">
                <input type="checkbox" checked>
                <span class="slider"></span>
            </label>
        </div>

        <div class="row1-rightPart">
            Model Name：
            <div class="highlighted-content">
                NTN-5K-248
            </div>
        </div>
    </div>
    
    <div id="sortable-modules" class="module-container">
        <div class="module-wrapper w25" draggable="@showEditBtn_Flag">
            <OverviewCard CssClass="module-card" showEditButton="@showEditBtn_Flag"/>
        </div>
        <div class="module-wrapper w50" draggable="@showEditBtn_Flag">
            <RunningDiagramCard CssClass="module-card" showEditButton="@showEditBtn_Flag"/>
        </div>
        <div class="module-wrapper w25" draggable="@showEditBtn_Flag">
            <StatisticsCard CssClass="module-card" showEditButton="@showEditBtn_Flag"/>
        </div>
        <div class="module-wrapper w50" draggable="@showEditBtn_Flag">
            <WattDiagram CssClass="module-card" showEditButton="@showEditBtn_Flag"/>
        </div>
        <div class="module-wrapper w50" draggable="@showEditBtn_Flag">
            <BatteryChart CssClass="module-card" showEditButton="@showEditBtn_Flag"/>
        </div>
    </div>
</div>


@code
{
    private bool showEditBtn_Flag;
    private async Task ReceiveFromChild(bool _FromTopRow_showEditBtn_Flag)
    {
        showEditBtn_Flag = _FromTopRow_showEditBtn_Flag;
        await JS.InvokeVoidAsync("initSortable", showEditBtn_Flag);
    }

    #region RunAtStart
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {//用這個function要搭配  @rendermode InteractiveServer 放在檔案開頭
    
        if (firstRender)
        {   
            Console.WriteLine("First Render");
            try{
                //[Debug] try drag function
                // var dotNetRef = DotNetObjectReference.Create(this);
                await JS.InvokeVoidAsync("initSortable", showEditBtn_Flag);
                //await JS.InvokeVoidAsync("sortableHelper.initSortable", showEditBtn_Flag);
            }
            catch(Exception ex)
            {
                Console.WriteLine("Error : " + ex.Message);
            }
        }
    }
    #endregion //RunAtStart
    
    // #region dragFunction
    // [JSInvokable]
    // public Task UpdateRowOrders(string[] row1, string[] row2)
    // {
    //     var all = 
    // }
    // #endregion //dragFunction

}